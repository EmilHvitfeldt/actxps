[{"path":"https://mattheaphy.github.io/actxps/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Matt Heaphy Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mattheaphy.github.io/actxps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matt Heaphy. Author, maintainer.","code":""},{"path":"https://mattheaphy.github.io/actxps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Heaphy M (2023). actxps: Create Actuarial Experience Studies: Prepare Data, Summarize Results, Create Reports. https://github.com/mattheaphy/actxps/, https://mattheaphy.github.io/actxps/.","code":"@Manual{,   title = {actxps: Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports},   author = {Matt Heaphy},   year = {2023},   note = {https://github.com/mattheaphy/actxps/, https://mattheaphy.github.io/actxps/}, }"},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"actxps","dir":"","previous_headings":"","what":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"Experience studies used actuaries explore historical experience across blocks business inform assumption setting activities. package provides functions preparing data, creating studies, beginning assumption development.","code":""},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"can install development version actxps GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mattheaphy/actxps\")"},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"simulated-data-set","dir":"","previous_headings":"","what":"Simulated data set","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"actxps package includes data frame containing simulated census data theoretical deferred annuity product optional guaranteed income rider. grain data one row per policy. data includes 3 policy statuses: Active, Death, Surrender. Let’s assume ’re interested calculating probability surrender one policy year. simply calculate proportion policies surrendered status represent annualized surrender rate.","code":"library(actxps) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  census_dat #> # A tibble: 20,000 x 10 #>    pol_num status    issue_date inc_guar qual    age product gender wd_age #>      <int> <fct>     <date>     <lgl>    <lgl> <int> <fct>   <fct>   <int> #>  1       1 Active    2014-12-17 TRUE     FALSE    56 b       F          77 #>  2       2 Surrender 2007-09-24 FALSE    FALSE    71 a       F          71 #>  3       3 Active    2012-10-06 FALSE    TRUE     62 b       F          63 #>  4       4 Surrender 2005-06-27 TRUE     TRUE     62 c       M          62 #>  5       5 Active    2019-11-22 FALSE    FALSE    62 c       F          67 #>  6       6 Active    2018-09-01 FALSE    TRUE     77 a       F          77 #>  7       7 Active    2011-07-23 TRUE     TRUE     63 a       M          65 #>  8       8 Surrender 2005-11-08 TRUE     TRUE     58 a       M          58 #>  9       9 Active    2010-09-19 FALSE    FALSE    53 c       M          64 #> 10      10 Active    2012-05-25 TRUE     FALSE    61 b       M          73 #> # ... with 19,990 more rows, and 1 more variable: term_date <date> (status_counts <- table(census_dat$status)) #>  #>    Active     Death Surrender  #>     15195      1860      2945 prop.table(status_counts) #>  #>    Active     Death Surrender  #>   0.75975   0.09300   0.14725"},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"creating-exposed-data","dir":"","previous_headings":"","what":"Creating exposed data","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"order calculate annual surrender rates, need break policy multiple records. one row per policy per year. expose_ family functions used perform transformation. Now data “exposed” policy year, observed annual surrender probability can calculated : default, expose function calculate exposures policy year. can also accomplished function expose_py. implementations expose include: expose_cy = exposures calendar year expose_cq = exposures calendar quarter expose_pm = exposures policy month expose_cm = exposures calendar month expose_ functions return exposed_df objects.","code":"exposed_data <- expose(census_dat, end_date = \"2019-12-31\",                          target_status = \"Surrender\")  exposed_data #> Exposure data #>  #>  Exposure type: policy_year  #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  #> # A tibble: 141,297 x 13 #>    pol_num status issue_date inc_guar qual    age product gender wd_age #>  *   <int> <fct>  <date>     <lgl>    <lgl> <int> <fct>   <fct>   <int> #>  1       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  2       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  3       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  4       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  5       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  6       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  7       2 Active 2007-09-24 FALSE    FALSE    71 a       F          71 #>  8       2 Active 2007-09-24 FALSE    FALSE    71 a       F          71 #>  9       2 Active 2007-09-24 FALSE    FALSE    71 a       F          71 #> 10       2 Active 2007-09-24 FALSE    FALSE    71 a       F          71 #> # ... with 141,287 more rows, and 4 more variables: term_date <date>, #> #   pol_yr <int>, pol_date_yr <date>, exposure <dbl> sum(exposed_data$status == \"Surrender\") / sum(exposed_data$exposure) #> [1] 0.02145196"},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"experience-study-summary-function","dir":"","previous_headings":"","what":"Experience study summary function","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"exp_stats function creates summary observed experience data. output function exp_df object.","code":"exp_stats(exposed_data) #> Experience study results #>  #>  Groups:   #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  #> # A tibble: 1 x 4 #>   n_claims claims exposure  q_obs #> *    <int>  <int>    <dbl>  <dbl> #> 1     2846   2846  132669. 0.0215"},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"grouped-experience-data","dir":"","previous_headings":"Experience study summary function","what":"Grouped experience data","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"data frame passed exp_stats grouped, resulting output contain one record unique group.","code":"library(dplyr)  exp_res <- exposed_data |>    group_by(pol_yr, inc_guar) |>    exp_stats()  exp_res #> Experience study results #>  #>  Groups: pol_yr, inc_guar  #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  #> # A tibble: 30 x 6 #>    pol_yr inc_guar n_claims claims exposure   q_obs #>  *  <int> <lgl>       <int>  <int>    <dbl>   <dbl> #>  1      1 FALSE          42     42    7719. 0.00544 #>  2      1 TRUE           38     38   11526. 0.00330 #>  3      2 FALSE          65     65    7117. 0.00913 #>  4      2 TRUE           61     61   10605. 0.00575 #>  5      3 FALSE          67     67    6476. 0.0103  #>  6      3 TRUE           60     60    9626. 0.00623 #>  7      4 FALSE         103    103    5823. 0.0177  #>  8      4 TRUE           58     58    8697. 0.00667 #>  9      5 FALSE          94     94    5147. 0.0183  #> 10      5 TRUE           72     72    7779. 0.00926 #> # ... with 20 more rows"},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"actual-to-expected-rates","dir":"","previous_headings":"Experience study summary function","what":"Actual-to-expected rates","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"derive actual--expected rates, first attach one columns expected termination rates exposure data. , pass column names expected argument exp_stats.","code":"expected_table <- c(seq(0.005, 0.03, length.out = 10), 0.2, 0.15, rep(0.05, 3))   exposed_data <- exposed_data |>    mutate(expected_1 = expected_table[pol_yr],          expected_2 = ifelse(exposed_data$inc_guar, 0.015, 0.03))  exp_res <- exposed_data |>    group_by(pol_yr, inc_guar) |>    exp_stats(expected = c(\"expected_1\", \"expected_2\"))  exp_res #> Experience study results #>  #>  Groups: pol_yr, inc_guar  #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  Expected values: expected_1, expected_2  #>  #> # A tibble: 30 x 10 #>    pol_yr inc_guar n_claims claims exposure   q_obs expected_1 expected_2 #>  *  <int> <lgl>       <int>  <int>    <dbl>   <dbl>      <dbl>      <dbl> #>  1      1 FALSE          42     42    7719. 0.00544    0.005        0.03  #>  2      1 TRUE           38     38   11526. 0.00330    0.005        0.015 #>  3      2 FALSE          65     65    7117. 0.00913    0.00778      0.03  #>  4      2 TRUE           61     61   10605. 0.00575    0.00778      0.015 #>  5      3 FALSE          67     67    6476. 0.0103     0.0106       0.03  #>  6      3 TRUE           60     60    9626. 0.00623    0.0106       0.015 #>  7      4 FALSE         103    103    5823. 0.0177     0.0133       0.03  #>  8      4 TRUE           58     58    8697. 0.00667    0.0133       0.015 #>  9      5 FALSE          94     94    5147. 0.0183     0.0161       0.03  #> 10      5 TRUE           72     72    7779. 0.00926    0.0161       0.015 #> # ... with 20 more rows, and 2 more variables: ae_expected_1 <dbl>, #> #   ae_expected_2 <dbl>"},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"autoplot-and-autotable","dir":"","previous_headings":"Experience study summary function","what":"autoplot() and autotable()","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"autoplot() autotable() functions can used create visualizations summary tables.","code":"library(ggplot2)  .colors <- c(\"#eb15e4\", \"#7515eb\") theme_set(theme_light())  exp_res |>    autoplot() +    scale_color_manual(values = .colors) +    labs(title = \"Observed Surrender Rates by Policy Year and Income Guarantee Presence\") autotable(exp_res)"},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"summary","dir":"","previous_headings":"Experience study summary function","what":"summary()","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"Calling summary function exp_df object re-summarizes experience results. also produces exp_df object. additional variables passed ..., variables become groups re-summarized exp_df object.","code":"summary(exp_res) #> Experience study results #>  #>  Groups:   #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  Expected values: expected_1, expected_2  #>  #> # A tibble: 1 x 8 #>   n_claims claims exposure  q_obs expected_1 expected_2 ae_expected_1 #> *    <int>  <int>    <dbl>  <dbl>      <dbl>      <dbl>         <dbl> #> 1     2846   2846  132669. 0.0215     0.0242     0.0209         0.885 #> # ... with 1 more variable: ae_expected_2 <dbl> summary(exp_res, inc_guar) #> Experience study results #>  #>  Groups: inc_guar  #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  Expected values: expected_1, expected_2  #>  #> # A tibble: 2 x 9 #>   inc_guar n_claims claims exposure  q_obs expected_1 expected_2 ae_expected_1 #> * <lgl>       <int>  <int>    <dbl>  <dbl>      <dbl>      <dbl>         <dbl> #> 1 FALSE        1615   1615   52338. 0.0309     0.0234      0.03          1.32  #> 2 TRUE         1231   1231   80331. 0.0153     0.0248      0.015         0.619 #> # ... with 1 more variable: ae_expected_2 <dbl>"},{"path":"https://mattheaphy.github.io/actxps/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny App","title":"Create Actuarial Experience Studies: Prepare Data, Summarize Results, and Create Reports","text":"Passing exposed_df object exp_shiny function launches shiny app enables interactive exploration experience data.","code":"exp_shiny(exposed_data)"},{"path":"https://mattheaphy.github.io/actxps/reference/autoplot.exp_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot experience study results — autoplot.exp_df","title":"Plot experience study results — autoplot.exp_df","text":"Plot experience study results","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/autoplot.exp_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot experience study results — autoplot.exp_df","text":"","code":"# S3 method for exp_df autoplot(   object,   ...,   mapping,   scales = \"fixed\",   geoms = c(\"lines\", \"bars\"),   y_labels = scales::label_percent(accuracy = 0.1) )"},{"path":"https://mattheaphy.github.io/actxps/reference/autoplot.exp_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot experience study results — autoplot.exp_df","text":"object object class exp_df usually created function exp_stats(). ... Faceting variables passed facet_wrap(). mapping Aesthetic mapping passed ggplot(). scales scales argument passed facet_wrap(). geoms Type geometry. \"points\" passed, plot display lines points. \"bars\", plot display bars. y_labels Label function passed scale_y_continuous().","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/autoplot.exp_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot experience study results — autoplot.exp_df","text":"ggplot object","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/autoplot.exp_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot experience study results — autoplot.exp_df","text":"aesthetic map supplied, plot use first grouping variable object x axis q_obs y axis. addition, second grouping variable object used color fill. faceting variables supplied, plot use grouping variables 3+ facets passed facet_wrap().","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/autotable.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabular experience study summary — autotable","title":"Tabular experience study summary — autotable","text":"autotable generic function used create table object particular class. Tables constructed using gt package. autotable.exp_df used convert experience study results presentation-friendly format.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/autotable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabular experience study summary — autotable","text":"","code":"autotable(object, ...)  # S3 method for exp_df autotable(   object,   fontsize = 100,   decimals = 1,   colorful = TRUE,   color_q_obs = \"RColorBrewer::GnBu\",   color_ae_ = \"RColorBrewer::RdBu\",   rename_cols = rlang::list2(...),   ... )"},{"path":"https://mattheaphy.github.io/actxps/reference/autotable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabular experience study summary — autotable","text":"object object class exp_df usually created function exp_stats(). ... Additional arguments passed gt::gt(). fontsize Font size percentage multiplier. decimals Number decimals display percentages colorful TRUE, color added observed decrement rate actual--expected columns. color_q_obs Color palette used observed decrement rate. color_ae_ Color palette used actual--expected rates. rename_cols optional list consisting key-value pairs. can used relabel columns output table. Names column names object values new labels. See gt::cols_label() information.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/autotable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabular experience study summary — autotable","text":"gt object","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/autotable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tabular experience study summary — autotable","text":"See paletteer::paletteer_d()'s palette argument usage color_q_obs color_ae_ arguments.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/census_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated census data — census_dat","title":"Simulated census data — census_dat","text":"Simulated census data theoretical deferred annuity product optional guaranteed income rider. data theoretical represent experience specific product.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/census_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated census data — census_dat","text":"","code":"census_dat"},{"path":"https://mattheaphy.github.io/actxps/reference/census_dat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated census data — census_dat","text":"data frame 20,000 rows 11 columns: pol_num policy number status policy status: Active, Surrender, Death issue_date issue date inc_guar indicates whether policy issued income guarantee qual indicates whether policy purchased tax-qualified funds age issue age product product: , b, c gender M (Male) F (Female) wd_age Age withdrawals commence term_date termination date upon death surrender","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively explore experience data — exp_shiny","title":"Interactively explore experience data — exp_shiny","text":"Launch shiny application interactively explore drivers experience. dat must exposed_df object. error thrown object type passed. nothing passed predictors, columns names dat used (excluding policy number, status, termination date, exposure columns). expected argument optional. default, column names containing word \"expected\" used.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively explore experience data — exp_shiny","text":"","code":"exp_shiny(   dat,   predictors = names(dat),   expected = stringr::str_subset(names(dat), \"expected\"),   distinct_max = 25L )"},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively explore experience data — exp_shiny","text":"dat exposed_df object. predictors character vector independent variables dat include shiny app. expected character vector expected values dat include shiny app. distinct_max Maximum number distinct values allowed predictors included \"Color\" \"Facets\" grouping variables. input prevents drawing overly complex plots. Default value = 25.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactively explore experience data — exp_shiny","text":"return value. function called side effect launching shiny application.","code":""},{"path":[]},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"filters","dir":"Reference","previous_headings":"","what":"Filters","title":"Interactively explore experience data — exp_shiny","text":"sidebar contains filtering widgets variables passed predictors argument.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"variable-selection","dir":"Reference","previous_headings":"","what":"Variable Selection","title":"Interactively explore experience data — exp_shiny","text":"box includes widgets select grouping variables summarizing experience. \"x\" widget also used x variable plot output. Similarly, \"Color\" \"Facets\" widgets used color facets plot. Multiple faceting variables allowed. table output, \"x\", \"Color\", \"Facets\" particular meaning beyond order grouping variables displayed. expected values checkboxes used activate deactivate expected values passed expected argument. impacts table output directly available \"y\" variables plot. expected values available, widget appear. \"Weight \" widget used specify column, , contains weights summarizing experience.","code":""},{"path":[]},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"plot-tab","dir":"Reference","previous_headings":"","what":"Plot Tab","title":"Interactively explore experience data — exp_shiny","text":"tab includes plot various options customization: y: y variable Geometry: plotting geometry Add Smoothing?: activate plot loess curves Free y Scales: activate enable separate y scales plot.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"table","dir":"Reference","previous_headings":"","what":"Table","title":"Interactively explore experience data — exp_shiny","text":"tab includes data table.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"export-data","dir":"Reference","previous_headings":"","what":"Export Data","title":"Interactively explore experience data — exp_shiny","text":"tab includes download button save copy summarized experience data.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"filter-information","dir":"Reference","previous_headings":"","what":"Filter Information","title":"Interactively explore experience data — exp_shiny","text":"box contains information original number exposure records, number records filters applied, percentage records retained.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactively explore experience data — exp_shiny","text":"","code":"if (interactive()) {   study_py <- expose_py(census_dat, \"2019-12-31\", target_status = \"Surrender\")   expected_table <- c(seq(0.005, 0.03, length.out = 10), 0.2, 0.15, rep(0.05, 3))    set.seed(123)   study_py <- study_py |>   dplyr::mutate(expected_1 = expected_table[pol_yr],                 expected_2 = ifelse(inc_guar, 0.015, 0.03),                 weights = rnorm(nrow(study_py), 100, 50) |> abs())    exp_shiny(study_py) }"},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize experience study records — exp_stats","title":"Summarize experience study records — exp_stats","text":"Create summary data frame experience given target status.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize experience study records — exp_stats","text":"","code":"exp_stats(   .data,   target_status = attr(.data, \"target_status\"),   expected,   col_exposure = \"exposure\",   col_status = \"status\",   wt = NULL,   credibility = FALSE,   cred_p = 0.95,   cred_r = 0.05 )  # S3 method for exp_df summary(object, ...)"},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize experience study records — exp_stats","text":".data data frame exposure-level records, ideally type exposed_df target_status character vector target status values expected character vector containing column names .data expected values col_exposure name column .data containing exposures col_status name column .data containing policy status wt Optional. Length 1 character vector. Name column .data containing weights use calculation claims, exposures, partial credibility. credibility whether output include partial credibility weights credibility-weighted decrement rates. cred_p confidence level Limited Fluctuation credibility method cred_r error tolerance Limited Fluctuation credibility method object exp_df object ... groups retain summary() called","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize experience study records — exp_stats","text":"tibble class exp_df, tbl_df, tbl, data.frame. results include columns grouping variables, claims, exposures, observed decrement rates (q_obs). values passed expected, additional columns added expected decrements actual--expected ratios. credibility set TRUE, additional columns added partial credibility credibility-weighted decrement rates (assuming values passed expected).","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize experience study records — exp_stats","text":".data grouped, resulting data frame contain one row per group. target_status provided, exp_stats() use target status .data class exposed_df. Otherwise, .data exposed_df object, status values except first level assumed. produce warning message.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":"expected-values","dir":"Reference","previous_headings":"","what":"Expected values","title":"Summarize experience study records — exp_stats","text":"expected argument optional. provided, argument must character vector values corresponding columns .data containing expected experience. one expected basis can provided.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":"credibility","dir":"Reference","previous_headings":"","what":"Credibility","title":"Summarize experience study records — exp_stats","text":"credibility set TRUE, output contain credibility column equal partial credibility estimate Limited Fluctuation credibility method (also known Classical Credibility) assuming binomial distribution claims.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":"summary-method","dir":"Reference","previous_headings":"","what":"summary() Method","title":"Summarize experience study records — exp_stats","text":"Applying summary() exp_df object re-summarize data retaining grouping variables passed \"dots\" (...).","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarize experience study records — exp_stats","text":"Herzog, Thomas (1999). Introduction Credibility Theory","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/exp_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize experience study records — exp_stats","text":"","code":"toy_census |> expose(\"2020-12-31\", target_status = \"Surrender\") |>     exp_stats() #> Experience study results #>  #>  Groups:   #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2020-12-31  #>  #> # A tibble: 1 × 4 #>   n_claims claims exposure q_obs #> *    <int>  <int>    <dbl> <dbl> #> 1        0      0     31.4     0  exp_res <- census_dat |>            expose(\"2019-12-31\", target_status = \"Surrender\") |>            dplyr::group_by(pol_yr, inc_guar) |>            exp_stats()  exp_res #> Experience study results #>  #>  Groups: pol_yr, inc_guar  #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  #> # A tibble: 30 × 6 #>    pol_yr inc_guar n_claims claims exposure   q_obs #>  *  <int> <lgl>       <int>  <int>    <dbl>   <dbl> #>  1      1 FALSE          42     42    7719. 0.00544 #>  2      1 TRUE           38     38   11526. 0.00330 #>  3      2 FALSE          65     65    7117. 0.00913 #>  4      2 TRUE           61     61   10605. 0.00575 #>  5      3 FALSE          67     67    6476. 0.0103  #>  6      3 TRUE           60     60    9626. 0.00623 #>  7      4 FALSE         103    103    5823. 0.0177  #>  8      4 TRUE           58     58    8697. 0.00667 #>  9      5 FALSE          94     94    5147. 0.0183  #> 10      5 TRUE           72     72    7779. 0.00926 #> # … with 20 more rows summary(exp_res) #> Experience study results #>  #>  Groups:   #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  #> # A tibble: 1 × 4 #>   n_claims claims exposure  q_obs #> *    <int>  <int>    <dbl>  <dbl> #> 1     2846   2846  132669. 0.0215 summary(exp_res, inc_guar) #> Experience study results #>  #>  Groups: inc_guar  #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  #> # A tibble: 2 × 5 #>   inc_guar n_claims claims exposure  q_obs #> * <lgl>       <int>  <int>    <dbl>  <dbl> #> 1 FALSE        1615   1615   52338. 0.0309 #> 2 TRUE         1231   1231   80331. 0.0153"},{"path":"https://mattheaphy.github.io/actxps/reference/expose.html","id":null,"dir":"Reference","previous_headings":"","what":"Create exposure records from census records — expose","title":"Create exposure records from census records — expose","text":"Convert data frame census-level records exposure-level records.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/expose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create exposure records from census records — expose","text":"","code":"expose(   .data,   end_date,   start_date = as.Date(\"1900-01-01\"),   target_status = NULL,   cal_expo = FALSE,   expo_length = c(\"year\", \"quarter\", \"month\", \"week\"),   col_pol_num = \"pol_num\",   col_status = \"status\",   col_issue_date = \"issue_date\",   col_term_date = \"term_date\",   default_status )  expose_py(...)  expose_pq(...)  expose_pm(...)  expose_pw(...)  expose_cy(...)  expose_cq(...)  expose_cm(...)  expose_cw(...)"},{"path":"https://mattheaphy.github.io/actxps/reference/expose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create exposure records from census records — expose","text":".data data frame census-level records end_date experience study end date start_date experience study start date. Default value = 1900-01-01. target_status character vector target status values. Default value = NULL. cal_expo set TRUE calendar year exposures. Otherwise policy year exposures used. expo_length exposure period length col_pol_num name column .data containing policy number col_status name column .data containing policy status col_issue_date name column .data containing issue date col_term_date name column .data containing termination date default_status optional scalar character representing default active status code ... arguments passed expose()","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/expose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create exposure records from census records — expose","text":"tibble class exposed_df, tbl_df, tbl, data.frame. results include existing columns .data plus new columns exposures observation periods. policy year exposures, two observation period columns returned. Columns beginning (pol_) integer policy periods. Columns beginning (pol_date_) calendar dates representing anniversary dates, monthiversary dates, etc.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/expose.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create exposure records from census records — expose","text":"Census-level data refers data set wherein one row per unique policy. Exposure-level data expands census-level data one record per policy per observation period. Observation periods meaningful period time policy year, policy month, calendar year, calendar quarter, calendar month, etc. target_status used calculation exposures. annual exposure method applied, allocates full period exposure statuses target_status. statuses, new entrants exits partially exposed based time elapsed observation period. method consistent Balducci Hypothesis, assumes probability termination proportionate time elapsed observation period. annual exposure method desired, target_status can ignored. case, partial exposures always applied regardless status. default_status used indicate default active status used exposure records created. left blank, first status level assumed default active status.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/expose.html","id":"policy-period-and-calendar-period-variations","dir":"Reference","previous_headings":"","what":"Policy period and calendar period variations","title":"Create exposure records from census records — expose","text":"functions expose_py(), expose_pq(), expose_pm(), expose_pw(), expose_cy(), expose_cq(), expose_cm(), expose_cw() convenience functions specific implementations expose(). two characters underscore describe exposure type exposure period, respectively. exposures types: p refers policy years c refers calendar years. exposure periods: y = years q = quarters m = months w = weeks.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/expose.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create exposure records from census records — expose","text":"Atkinson McGarry (2016). Experience Study Calculations. https://www.soa.org/49378a/globalassets/assets/files/research/experience-study-calculations.pdf","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/expose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create exposure records from census records — expose","text":"","code":"toy_census |> expose(\"2020-12-31\") #> Exposure data #>  #>  Exposure type: policy_year  #>  Target status:   #>  Study range: 1900-01-01 to 2020-12-31  #>  #> # A tibble: 33 × 7 #>    pol_num status issue_date term_date pol_yr pol_date_yr exposure #>  *   <int> <fct>  <date>     <date>     <int> <date>         <dbl> #>  1       1 Active 2010-01-01 NA             1 2010-01-01         1 #>  2       1 Active 2010-01-01 NA             2 2011-01-01         1 #>  3       1 Active 2010-01-01 NA             3 2012-01-01         1 #>  4       1 Active 2010-01-01 NA             4 2013-01-01         1 #>  5       1 Active 2010-01-01 NA             5 2014-01-01         1 #>  6       1 Active 2010-01-01 NA             6 2015-01-01         1 #>  7       1 Active 2010-01-01 NA             7 2016-01-01         1 #>  8       1 Active 2010-01-01 NA             8 2017-01-01         1 #>  9       1 Active 2010-01-01 NA             9 2018-01-01         1 #> 10       1 Active 2010-01-01 NA            10 2019-01-01         1 #> # … with 23 more rows  census_dat |> expose_py(\"2019-12-31\", target_status = \"Surrender\") #> Exposure data #>  #>  Exposure type: policy_year  #>  Target status: Surrender  #>  Study range: 1900-01-01 to 2019-12-31  #>  #> # A tibble: 141,297 × 13 #>    pol_num status issue_date inc_guar qual    age product gender wd_age #>  *   <int> <fct>  <date>     <lgl>    <lgl> <int> <fct>   <fct>   <int> #>  1       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  2       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  3       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  4       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  5       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  6       1 Active 2014-12-17 TRUE     FALSE    56 b       F          77 #>  7       2 Active 2007-09-24 FALSE    FALSE    71 a       F          71 #>  8       2 Active 2007-09-24 FALSE    FALSE    71 a       F          71 #>  9       2 Active 2007-09-24 FALSE    FALSE    71 a       F          71 #> 10       2 Active 2007-09-24 FALSE    FALSE    71 a       F          71 #> # … with 141,287 more rows, and 4 more variables: term_date <date>, #> #   pol_yr <int>, pol_date_yr <date>, exposure <dbl>"},{"path":"https://mattheaphy.github.io/actxps/reference/is_exposed_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Exposed data frame helper functions — is_exposed_df","title":"Exposed data frame helper functions — is_exposed_df","text":"Test coerce exposed_df class.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/is_exposed_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exposed data frame helper functions — is_exposed_df","text":"","code":"is_exposed_df(x)  as_exposed_df(   x,   end_date,   start_date = as.Date(\"1900-01-01\"),   target_status = NULL,   cal_expo = FALSE,   expo_length = \"year\" )"},{"path":"https://mattheaphy.github.io/actxps/reference/is_exposed_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exposed data frame helper functions — is_exposed_df","text":"x object. x must data frame calling as_exposed_df() end_date experience study end date start_date experience study start date. Default value = 1900-01-01. target_status character vector target status values. Default value = NULL. cal_expo set TRUE calendar year exposures. Otherwise policy year exposures used. expo_length exposure period length","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/is_exposed_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exposed data frame helper functions — is_exposed_df","text":"is_exposed_df(), length-1 logical vector. as_exposed_df(), exposed_df object.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/is_exposed_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exposed data frame helper functions — is_exposed_df","text":"behind--scenes functions generally called users. is_exposed_df() return TRUE x exposed_df object. as_exposed_df() coerce data frame exposed_df object.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/qx_iamb.html","id":null,"dir":"Reference","previous_headings":"","what":"2012 Individual Annuity Mortality Table and Projection Scale G2 — qx_iamb","title":"2012 Individual Annuity Mortality Table and Projection Scale G2 — qx_iamb","text":"Mortality rates mortality improvement rates 2012 Individual Annuity Mortality Basic (IAMB) Table Project Scale G2.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/qx_iamb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2012 Individual Annuity Mortality Table and Projection Scale G2 — qx_iamb","text":"","code":"qx_iamb  scale_g2"},{"path":"https://mattheaphy.github.io/actxps/reference/qx_iamb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"2012 Individual Annuity Mortality Table and Projection Scale G2 — qx_iamb","text":"2012 IAMB table, data frame 242 rows 3 columns: age attained age qx mortality rate gender Female Male Project Scale G2 table, data frame 242 rows 3 columns: age attained age mi mortality improvement rate gender Female Male","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/qx_iamb.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"2012 Individual Annuity Mortality Table and Projection Scale G2 — qx_iamb","text":"https://mort.soa.org/ https://www.actuary.org/sites/default/files/files/publications/Payout_Annuity_Report_09-28-11.pdf","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr groups generics tidy ggplot2 autoplot recipes bake, prep","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/step_expose.html","id":null,"dir":"Reference","previous_headings":"","what":"Create exposure records in a recipes step — step_expose","title":"Create exposure records in a recipes step — step_expose","text":"step_expose creates specification recipe step convert data frame census-level records exposure-level records.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/step_expose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create exposure records in a recipes step — step_expose","text":"","code":"step_expose(   recipe,   ...,   role = NA,   trained = FALSE,   end_date,   start_date = as.Date(\"1900-01-01\"),   target_status = NULL,   options = list(cal_expo = FALSE, expo_length = \"year\"),   drop_pol_num = TRUE,   skip = TRUE,   id = recipes::rand_id(\"expose\") )"},{"path":"https://mattheaphy.github.io/actxps/reference/step_expose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create exposure records in a recipes step — step_expose","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role used step since new variables created. trained logical indicate quantities preprocessing estimated. end_date experience study end date start_date experience study start date. Default value = 1900-01-01. target_status character vector target status values. Default value = NULL. options named list additional arguments passed expose(). drop_pol_num Whether pol_num column produced expose() dropped. Defaults TRUE. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/step_expose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create exposure records in a recipes step — step_expose","text":"updated version recipe new expose step added sequence existing operations. tidy method, tibble columns exposure_type, target_status, start_date, end_date.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/step_expose.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create exposure records in a recipes step — step_expose","text":"Policy year exposures calculated default. switch calendar exposures another exposure length, use pass appropriate arguments options parameter. Policy numbers dropped default whenever recipe baked. done prevent unintentional errors model formula includes variables (y ~ .). policy numbers required reason (mixed effect models, identification, etc.), set drop_pol_num FALSE.","code":""},{"path":[]},{"path":"https://mattheaphy.github.io/actxps/reference/step_expose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create exposure records in a recipes step — step_expose","text":"","code":"expo_rec <- recipes::recipe(status ~ ., toy_census) |>   step_expose(end_date = \"2022-12-31\", target_status = \"Surrender\",               options = list(expo_length = \"month\")) |>   prep()  recipes::juice(expo_rec) #> # A tibble: 416 × 6 #>    issue_date term_date status pol_mth pol_date_mth exposure #>    <date>     <date>    <fct>    <int> <date>          <dbl> #>  1 2010-01-01 NA        Active       1 2010-01-01          1 #>  2 2010-01-01 NA        Active       2 2010-02-01          1 #>  3 2010-01-01 NA        Active       3 2010-03-01          1 #>  4 2010-01-01 NA        Active       4 2010-04-01          1 #>  5 2010-01-01 NA        Active       5 2010-05-01          1 #>  6 2010-01-01 NA        Active       6 2010-06-01          1 #>  7 2010-01-01 NA        Active       7 2010-07-01          1 #>  8 2010-01-01 NA        Active       8 2010-08-01          1 #>  9 2010-01-01 NA        Active       9 2010-09-01          1 #> 10 2010-01-01 NA        Active      10 2010-10-01          1 #> # … with 406 more rows"},{"path":"https://mattheaphy.github.io/actxps/reference/toy_census.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy policy census data — toy_census","title":"Toy policy census data — toy_census","text":"tiny dataset containing 3 policies: one active, one terminated due death, one terminated due surrender.","code":""},{"path":"https://mattheaphy.github.io/actxps/reference/toy_census.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toy policy census data — toy_census","text":"","code":"toy_census"},{"path":"https://mattheaphy.github.io/actxps/reference/toy_census.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toy policy census data — toy_census","text":"data frame 3 rows 4 columns: pol_num policy number status policy status issue_date issue date term_date termination date","code":""},{"path":[]},{"path":"https://mattheaphy.github.io/actxps/news/index.html","id":"actxps-020","dir":"Changelog","previous_headings":"","what":"actxps 0.2.0","title":"actxps 0.2.0","text":"CRAN release: 2022-08-31 First version submitted CRAN. Added exp_shiny() function.","code":""},{"path":"https://mattheaphy.github.io/actxps/news/index.html","id":"actxps-010","dir":"Changelog","previous_headings":"","what":"actxps 0.1.0","title":"actxps 0.1.0","text":"Added step_expose() recipe step function.","code":""},{"path":"https://mattheaphy.github.io/actxps/news/index.html","id":"actxps-009000","dir":"Changelog","previous_headings":"","what":"actxps 0.0.9000","title":"actxps 0.0.9000","text":"First developmental version","code":""}]
